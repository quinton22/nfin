#!/usr/bin/env bash

# todo:
# - on keyboard interrupt
# - move declarations to common file
# - email
# - text
# - native notification
# - install script âœ…
# - update script
# - ignore certain commands (e.g. man)
# - allow editing config

# todo need?
set -e

# load and export configuration
: ${NFIN_DIR:=$(cd $(dirname "$0") && pwd)}
: ${NFIN_HOME:=$NFIN_DIR/..}
NFIN_SETTINGS_FILE="$NFIN_HOME/etc/config.json"
NFIN_CONFIG=$( cat $NFIN_SETTINGS_FILE )

source "$NFIN_DIR/internal/get_setting"
source "$NFIN_DIR/internal/common"
source "$NFIN_DIR/internal/args"

function process_arg {
  local formal_arg=$1
  shift 1
  local arg_opts="$@"
  case "$formal_arg" in
    config)
      source "$NFIN_DIR/internal/config"
      config $arg_opts
      exit 0
    ;;
    help)
      source "$NFIN_DIR/internal/help"
      nfin_help $arg_opts
      exit 0
    ;;
    command)
      if [ -n  "$arg_opts" ]; then
        NFIN_USER_COMMAND=$arg_opts
        # set a temporary config
        local_changes_only=true
      fi
    ;;
    *)
      echo "Unsupported argument: $formal_arg"
      source "$NFIN_DIR/internal/help"
      nfin_usage
      exit 0
    ;;
  esac
}

function process_args {
  for arg in $@; do
    process_arg $( sed 's/=/ /' <<< $arg )
  done
}

function nfin {
  local supported_args_map=( 'config=-c|--config%?' 'help=-h|--help%?' )
  local supported_args="${supported_args_map[@]}"
  local local_changes_only=false
  local parsed_args=( $(parse_args "$supported_args" "$@") )

  source "$NFIN_DIR/internal/notify"

  if [ "$#" -eq 0 ]; then
    notify
    exit 0
  fi

  NFIN_USER_COMMAND=

  echo $parsed_args

  process_args $parsed_args

  export NFIN_USER_COMMAND

  if [ -z "$NFIN_USER_COMMAND" ]; then
    exit 0
  fi

  # trap 'notify "$start" "failure" "$?" "$LINENO"' ERR

  start=$(date +%s)

  # what do we want to do with the error output?
  # "$@" 2>/dev/null && outcome='success' || outcome='failure'

  $NFIN_USER_COMMAND

  return_code=$?
  end=$(date +%s)

  notify $return_code $start $end 

  # todo: handle errors from above, but for now...
  exit $return_code
}

nfin "$@"