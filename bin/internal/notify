#!/usr/bin/env bash

source "$NFIN_DIR/internal/get_setting"
source "$NFIN_DIR/internal/common"

function native_notification {
   if [[ "$OS" == 'Darwin' ]]; then
    case $1 in
      success)
        local title="\"Command succeeded\""
        ;;
      error)
        local title="\"Command failed\""
        ;;
      *)
        local title="\"Command finished\""
        ;;
    esac

    # todo: capture and display output
    message="\"$NFIN_USER_COMMAND\""

    [[ "$2" == 'notification' ]] \
    && content="$message with title \"nFin\" subtitle $title ${3-""}" \
    || content="$title message $message ${3-""}"

    osascript -e "display $2 $content" &>/dev/null
  fi
  # todo windows
}

function alert {
  [[ "$1" =~ (success|finished) ]] && local alert_type='informational' || local alert_type='critical'
  native_notification $1 'alert' "as $alert_type"
}

function notification {
  native_notification $1 'notification' "sound name \"Submarine\""
}

function speak {
  if [[ "$OS" == 'Darwin' ]]; then
    say $1
  else
    bell $1
  fi
}

function bell {
  [[ "$1" =~ (finished|success) ]] && num_bells="\a" || num_bells="\a\a"
  echo -en "$num_bells"
}

# $1: return code
# $2: start time
# $3: end time
function notify {
  local elapsed_time=$((${3:-0} - ${2:-1}))
  local notification_type=$(get_notification_type "${1:-0}" "$elapsed_time")

  local finish_type='finished'
  if [ -n "$1" ]; then
    [ "$1" -eq 0 ] && finish_type='success' || finish_type='error'
  fi

  $notification_type
  return $?
}
