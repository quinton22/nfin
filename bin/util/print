#!/usr/bin/env bash

color() {
  local color
  local brightness
  case $1 in
    LIGHT*) brightness='1' ;;
    *) brightness='0' ;;
  esac

  case $1 in
    *BLACK|*black) color="$brightness;30" ;;
    DARKGRAY|DARK_GRAY|darkgray|dark_gray) color="1;30" ;;
    *RED|*red) color="$brightness;31" ;;
    *GREEN|*green) color="$brightness;32" ;;
    *ORANGE|*orange) color="$brightness;33" ;;
    *BLUE|*blue) color="$brightness;34" ;;
    *PURPLE|*purple) color="$brightness;35" ;;
    *CYAN|*cyan) color="$brightness;36" ;;
    *GRAY|*gray) color="$brightness;37" ;;
    YELLOW|yellow) color="1;33" ;;
    WHITE|white) color="1;37" ;;
    BOLD|bold) color="1" ;;
    UNDERLINE|underline) color="4" ;;
    END|end) color="0" ;;
  esac

  printf '\033[%sm' $color
}



# Black        0;30     Dark Gray     1;30
# Red          0;31     Light Red     1;31
# Green        0;32     Light Green   1;32
# Brown/Orange 0;33     Yellow        1;33
# Blue         0;34     Light Blue    1;34
# Purple       0;35     Light Purple  1;35
# Cyan         0;36     Light Cyan    1;36
# Light Gray   0;37     White         1;37

print_command() {
  local p=$1
  shift
  printf "$(color PURPLE)$p$(color END)" $@
}

print_file() {
  local p=$1
  shift
  printf "$(color BLUE)$p$(color END)" $@
}

print_error() {
  local p=$1
  shift
  printf "$(color RED)$p$(color END)" $@
}

print_warning() {
  local p=$1
  shift
  printf "$(color YELLOW)$p$(color END)" $@
}

print_success() {
  local p=$1
  shift
  printf "$(color GREEN)$p$(color END)" $@
}

print_underline() {
   local p=$1
  shift
  printf "$(color UNDERLINE)$p$(color END)" $@
}

print_bold() {
   local p=$1
  shift
  printf "$(color BOLD)$p$(color END)" $@
}

print_help_title() {
  # TODO
  :
}

print_help_usage() {
  IFS=$'\n' local usage=( $(echo "$1") )
  printf "$(print_bold 'USAGE'):\n\n"
  printf "\t%s\n" "${usage[@]}"
}

print_help_description() {
  IFS=$'\n' local desc=( $(echo "$1") )
  printf "$(print_bold 'DESCRIPTION'):\n\n"
  printf "\t%s\n" "${desc[@]}"
}

print_help_options() {
  printf "$(print_bold 'OPTIONS'):\n\n"
  # local options=( $(echo "$1") )
  
  # for item in "${options[@]}"; do
  #   printf "\t$key\n"
  #   printf "\t\t${options[$key]}\n\n"
  # done
}

print_help_command() {
  print_help_title $1
  print_help_usage $2
  print_help_description $3
  print_help_options $4
}

function nfin_option_config {
  printf "\t-c, --config\n"
  printf "\t\tUsed to view and update the config.\n\n"
}
